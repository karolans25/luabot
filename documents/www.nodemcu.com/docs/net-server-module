<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width">

  <title>NodeMCU Docs | net.server module</title>

  <!-- jQuery -->
  <script src="assets/js/jquery-1.11.1.min.js"></script>

  <!-- Let me embed vines -->
  <!--
  <script async src="//platform.vine.co/static/scripts/embed.js" charset="utf-8"></script>
  -->
  
  <!-- Favicon -->
  <link rel="shortcut icon" href="assets/orange.ico" type="image/x-icon">

  <!-- Vendor theme mods -->
  <script src="assets/js/jquery-styling.js"></script>
  <script src="assets/js/prettify.js"></script>
  <!-- <script src='../assets/js/scrollspy.js'></script> -->

  <!-- Spark theme mods -->
  <link href="assets/css/style.css" rel="stylesheet">
  <script src="assets/js/animated-core.js"></script>

  <!-- Meta -->
  <meta content="NodeMCU" property="og:title">
  <meta content="Documentation for NodeMCU, a platform for connected devices." name="description">

</head>
<body role="flatdoc">

  <div id="docs">
    <div class="header">
      <div class="left">
        <a href="https://www.nodemcu.com">
          <img src="assets/images/nodemcu-docs.png" id="logo">
        </a>
      </div>
      <div class="right">
        <!--
        <a href="../assets/docs.zip" class="icon"><i class="icon ion-arrow-down-a"></i></a>
        -->
        <a href="http://www.github.com/nodemcu/nodemcu-firmware" class="icon"><i class="icon ion-social-github"></i></a>
        <!--
        <a href="https://github.com/spark/docs/edit/master/src/content/net-server-module.md" class="button">Edit this page</a>
        -->
      </div>
    </div>

    <div class="content-root" data-spy="scroll" data-target="#toc">
      <div class="menubar">
        <div class="menu section" role="flatdoc-menu">
          <ul>
            
              <li><a href="index.1" class="level-0 ">Index</a></li>
            
              <li><a href="node-module" class="level-0 ">node module</a></li>
            
              <li><a href="file-module" class="level-0 ">file module</a></li>
            
              <li><a href="wifi-module" class="level-0 ">wifi module</a></li>
            
              <li><a href="wifi-sta-module" class="level-0 ">wifi.sta module</a></li>
            
              <li><a href="wifi-ap-module" class="level-0 ">wifi.ap module</a></li>
            
              <li><a href="timer-module" class="level-0 ">timer module</a></li>
            
              <li><a href="gpio-module" class="level-0 ">GPIO module</a></li>
            
              <li><a href="pwm-module" class="level-0 ">PWM module</a></li>
            
              <li><a href="net-module" class="level-0 ">net module</a></li>
            
              <li><a href="net-server-module" class="level-0 active">net.server module</a></li>
            
              <li><a href="net-socket-module" class="level-0 ">net.socket module</a></li>
            
              <li><a href="i2c-module" class="level-0 ">i2c module</a></li>
            
              <li><a href="adc-module" class="level-0 ">adc module</a></li>
            
              <li><a href="uart-module" class="level-0 ">uart module</a></li>
            
              <li><a href="onewire-module" class="level-0 ">onewire module</a></li>
            
              <li><a href="bit-module" class="level-0 ">bit module</a></li>
            
              <li><a href="spi-module" class="level-0 ">spi module</a></li>
            
              <li><a href="mqtt-module" class="level-0 ">mqtt module</a></li>
            
              <li><a href="mqtt-client-module" class="level-0 ">mqtt client module</a></li>
            
          </ul>
        </div>
        <div class="menu section" role="flatdoc-menu">
          <ul id="toc">
          <li id="net-server-module-item" class="level-1"><a id="net-server-module-link" href="net-server-module#net-server-module" class="level-1">net.server module</a></li><li id="net-server-module-listen-item" class="level-2"><a id="net-server-module-listen-link" href="net-server-module#net-server-module-listen" class="level-2">listen()</a></li><li id="net-server-module-close-item" class="level-2"><a id="net-server-module-close-link" href="net-server-module#net-server-module-close" class="level-2">close()</a></li></ul>
        </div>
      </div>
      <div role="flatdoc-content" class="content">
        <h1 id="net-server-module">net.server module</h1>
<h2 id="net-server-module-listen">listen()</h2>
<h4 id="description">Description</h4>
<p>listen on port from [ip] address.</p>
<h4 id="syntax">Syntax</h4>
<p>net.server.listen(port,[ip],function(net.socket))</p>
<h4 id="parameters">Parameters</h4>
<p>port: port number<br>
ip:ip address string, can be omitted<br>
function(net.socket): callback function, pass to Caller function as param if a connection is created successfully</p>
<h4 id="returns">Returns</h4>
<p>nil</p>
<h4 id="example">Example</h4>
<pre><code class="language-lua">    <span class="comment">-- create a server</span>
    <span class="comment">-- 30s time out for a inactive client</span>
    sv=net.createServer(net.TCP, <span class="number">30</span>)   

    <span class="comment">-- server listen on 80, </span>
    <span class="comment">-- if data received, print data to console,</span>
    <span class="comment">-- then send &quot;hello world&quot; to remote.</span>
    sv:listen(<span class="number">80</span>,<span class="function"><span class="keyword">function</span><span class="params">(c)</span></span>
      c:on(<span class="string">&quot;receive&quot;</span>, <span class="function"><span class="keyword">function</span><span class="params">(c, pl)</span></span> 
         <span class="built_in">print</span>(pl) 
      <span class="keyword">end</span>)
      c:send(<span class="string">&quot;hello world&quot;</span>)
    <span class="keyword">end</span>)</code></pre>
<h4 id="see-also">See also</h4>
<p><strong>-</strong>   <a href="net-server-module#net-server-module-createServer">net.createServer()</a></p>
<h2 id="net-server-module-close">close()</h2>
<h4 id="description">Description</h4>
<p>close server.</p>
<h4 id="syntax">Syntax</h4>
<p>net.server.close()</p>
<h4 id="parameters">Parameters</h4>
<p>nil</p>
<h4 id="returns">Returns</h4>
<p>nil</p>
<h4 id="example">Example</h4>
<pre><code class="language-lua">    <span class="comment">-- create a server</span>
    sv=net.createServer(net.TCP, <span class="number">30</span>)

    <span class="comment">-- close server</span>
    sv:close()</code></pre>
<h4 id="see-also">See also</h4>
<p><strong>-</strong>   <a href="net-server-module#net-server-module-createServer">net.createServer()</a></p>

      </div>
    </div>
  </div>

  <!-- Custom -->
  <script src="assets/js/docs.js"></script>

</body>
</html>
