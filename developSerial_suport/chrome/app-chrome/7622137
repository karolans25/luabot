



<!DOCTYPE html>
<html lang="en" class="">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    <meta name="viewport" content="width=1020">
    
    
    <title>Chrome Packaged Apps · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="https://gist.github.com/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://gist.github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="https://gist.github.com/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="https://gist.github.com/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="https://gist.github.com/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="https://gist.github.com/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="Chrome Packaged Apps" name="twitter:title" /><meta content="Chrome Packaged Apps" name="twitter:description" /><meta content="https://avatars1.githubusercontent.com/u/25288?v=3&amp;s=400" name="twitter:image:src" />
      <meta content="Gist" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars1.githubusercontent.com/u/25288?v=3&amp;s=400" property="og:image" /><meta content="Chrome Packaged Apps" property="og:title" /><meta content="https://gist.github.com/maicki/7622137" property="og:url" /><meta content="Chrome Packaged Apps" property="og:description" />
      <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">
    <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">
    <link rel="assets" href="https://assets-cdn.github.com/">
    
    <meta name="pjax-timeout" content="1000">
    

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="gist_code" data-pjax-transient>

    <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
    <meta name="google-analytics" content="UA-3769691-4">

<meta content="collector.githubapp.com" name="octolytics-host" /><meta content="gist" name="octolytics-app-id" /><meta content="BED88742:6920:22D764F2:568E8A63" name="octolytics-dimension-request_id" />
<meta content="/&lt;user-name&gt;/&lt;gist-id&gt;" data-pjax-transient="true" name="analytics-location" />
<meta content="Rails, view, gists/gists#show" data-pjax-transient="true" name="analytics-event" />


  <meta class="js-ga-set" name="dimension1" content="Logged Out">


    <meta content="true" name="octolytics-dimension-public" /><meta content="7622137" name="octolytics-dimension-gist_id" /><meta content="7622137" name="octolytics-dimension-gist_name" /><meta content="false" name="octolytics-dimension-anonymous" /><meta content="25288" name="octolytics-dimension-owner_id" /><meta content="maicki" name="octolytics-dimension-owner_login" /><meta content="false" name="octolytics-dimension-forked" />

  <meta class="js-ga-set" name="dimension5" content="public">
  <meta class="js-ga-set" name="dimension6" content="owned">
  <meta class="js-ga-set" name="dimension7" content="markdown">



        <meta name="hostname" content="gist.github.com">
    <meta name="user-login" content="">

        <meta name="expected-hostname" content="gist.github.com">

      <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#4078c0">
      <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">

    <meta content="3e672c6a1c190da2b78c9d82ba55191c3b23555b" name="form-nonce" />

    <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github-5ccfffb27ecb48e213b8582952578f145ffded2d5c7e090e9d9b98e7a9f7e4d2.css" media="all" rel="stylesheet" />
    <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github2-bb36a18170558b5640067716a6eebc06cce478d82d5fc804c355a26b15eec8d2.css" media="all" rel="stylesheet" />
    
    


    <meta http-equiv="x-pjax-version" content="b443da7b8382e9500185ecad6c58449f">

        <link href="https://gist.github.com/maicki.atom" rel="alternate" title="atom" type="application/atom+xml">
  
  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/gist-cde6fb68e3b44e4fc915a29f8dd341b88829f619df3b0e81267564bbec0c5f5f.css" media="all" rel="stylesheet" />

  </head>


  <body class="logged_out   env-production">
    <a href="7622137#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>

    
    
    



        <div class="header gist-header header-logged-out" role="banner">
  <div class="container clearfix">

    <a href="https://gist.github.com/" aria-label="Gist Homepage" class="header-logo-wordmark" data-hotkey="g d">
      <span class="mega-octicon octicon-logo-github "></span>
      <span class="mega-octicon octicon-logo-gist "></span>
</a>
    <div class="site-search js-site-search" role="search">
        <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="https://gist.github.com/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <label class="js-chromeless-input-container form-control">
    <input type="text"
      class="js-site-search-focus chromeless-input"
      data-hotkey="s"
      name="q"
      placeholder="Search…"
      tabindex="1"
      autocorrect="off"
      autocomplete="off"
      autocapitalize="off">
  </label>

</form>
    </div>
    <ul class="header-nav left" role="navigation">
      <li class="header-nav-item">
        <a href="https://gist.github.com/discover" class="header-nav-link" data-ga-click="Header, go to all gists, text:all gists">All gists</a>
      </li>

      <li class="header-nav-item">
        <a href="https://github.com" class="header-nav-link" data-ga-click="Header, go to GitHub, text:GitHub">GitHub</a>
      </li>
    </ul>

      <div class="header-actions" role="navigation">
        <a href="https://gist.github.com/join" class="btn btn-primary" data-ga-click="Header, sign up">Sign up for a GitHub account</a>
        <a href="https://gist.github.com/auth/github?return_to=gist" class="btn" data-ga-click="Header, sign in">Sign in</a>
      </div>

  </div>
</div>




    <div id="start-of-content" class="accessibility-aid"></div>

      <div id="js-flash-container">
</div>


    <div role="main" class="main-content">
      
  <div itemscope itemtype="http://schema.org/WebPage">
    <div id="gist-pjax-container" class="gist-content-wrapper context-loader-container js-repo-nav-next" data-pjax-container>
          <div class="gist-detail-intro gist-banner">
      <div class="container">
        <a href="https://gist.github.com/" class="btn btn-outline right">Create a gist now</a>
        <p class="lead">
          Instantly share code, notes, and snippets.
        </p>
      </div>
    </div>


  <div class="gisthead pagehead repohead instapaper_ignore readability-menu experiment-repo-nav">
    <div class="container">
        

<div class="container repohead-details-container">

  <ul class="pagehead-actions">


    <li>
        <a href="https://gist.github.com/login?return_to=https%3A%2F%2Fgist.github.com%2Fmaicki%2F7622137" aria-label="You must be signed in to star a gist" class="btn btn-sm btn-with-count tooltipped tooltipped-n" rel="nofollow">
    <span class="octicon octicon-star "></span>
    Star
</a>
  <a href="https://gist.github.com/maicki/7622137/stargazers" class="social-count">
    28
</a>
    </li>

      <li>
          <a href="https://gist.github.com/login?return_to=https%3A%2F%2Fgist.github.com%2Fmaicki%2F7622137" aria-label="You must be signed in to fork a gist" class="btn btn-sm btn-with-count tooltipped tooltipped-n" rel="nofollow">
    <span class="octicon octicon-repo-forked "></span>
    Fork
</a>
  <a href="https://gist.github.com/maicki/7622137/forks" class="social-count">
    5
</a>
      </li>

  </ul>

  <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public css-truncate">
    <img alt="@maicki" class="avatar gist-avatar" height="26" src="https://avatars3.githubusercontent.com/u/25288?v=3&amp;s=52" width="26" />
    <span class="author"><a href="https://gist.github.com/maicki" class="url fn" itemprop="url" rel="author"><span itemprop="title">maicki</span></a></span><!--
        --><span class="path-divider">/</span><!--
        --><strong class="gist-header-title css-truncate-target"><a href="7622137">ChromePackagedApps.md</a></strong>

    <span class="page-context-loader">
      <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
    </span>

    <div class="gist-timestamp">Last active <time datetime="2015-12-29T09:09:17Z" is="time-ago">Dec 29, 2015</time></div>
  </h1>
</div>

<div class="container">
  <div class="right file-navigation-options" data-multiple>

    <div class="file-navigation-option">
  <input type="hidden" name="protocol_type" value="clone">

  <div class="select-menu js-menu-container js-select-menu">
    <div class="input-group js-select-button js-zeroclipboard-container">
      <div class="input-group-button">
  <button type="button" class="btn btn-sm select-menu-button js-menu-target" data-ga-click="Repository, clone Embed, location:repo overview">
    Embed
  </button>
</div>
<input type="text" class="input-monospace input-mini js-zeroclipboard-target js-url-field" value="&lt;script src=&quot;https://gist.github.com/maicki/7622137.js&quot;&gt;&lt;/script&gt;" readonly>
<div class="input-group-button">
  <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy "></span></button>
</div>

    </div>

    <div class="select-menu-modal-holder">
      <div class="select-menu-modal js-menu-content" aria-hidden="true">
        <div class="select-menu-header">
          <span aria-label="Close" class="octicon octicon-x js-menu-close" role="button"></span>
          <span class="select-menu-title">What would you like to do?</span>
        </div>

        <div class="select-menu-list js-navigation-container" role="menu">
            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="octicon octicon-check select-menu-item-icon"></span>
              <div class="select-menu-item-text">
                <input type="radio" name="protocol_selector" value="embed" checked>
                <span class="select-menu-item-heading">
                  
                  Embed
                </span>
                  <span class="description">
                    Embed this gist in your website.
                  </span>
                <span class="js-select-button-text hidden-select-button-text">
                  <div class="input-group-button">
  <button type="button" class="btn btn-sm select-menu-button js-menu-target" data-ga-click="Repository, clone Embed, location:repo overview">
    Embed
  </button>
</div>
<input type="text" class="input-monospace input-mini js-zeroclipboard-target js-url-field" value="&lt;script src=&quot;https://gist.github.com/maicki/7622137.js&quot;&gt;&lt;/script&gt;" readonly>
<div class="input-group-button">
  <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy "></span></button>
</div>

                </span>
              </div>
            </div>
            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="octicon octicon-check select-menu-item-icon"></span>
              <div class="select-menu-item-text">
                <input type="radio" name="protocol_selector" value="share" >
                <span class="select-menu-item-heading">
                  
                  Share
                </span>
                  <span class="description">
                    Copy sharable URL for this gist.
                  </span>
                <span class="js-select-button-text hidden-select-button-text">
                  <div class="input-group-button">
  <button type="button" class="btn btn-sm select-menu-button js-menu-target" data-ga-click="Repository, clone Share, location:repo overview">
    Share
  </button>
</div>
<input type="text" class="input-monospace input-mini js-zeroclipboard-target js-url-field" value="https://gist.github.com/maicki/7622137" readonly>
<div class="input-group-button">
  <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy "></span></button>
</div>

                </span>
              </div>
            </div>
            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="octicon octicon-check select-menu-item-icon"></span>
              <div class="select-menu-item-text">
                <input type="radio" name="protocol_selector" value="http" >
                <span class="select-menu-item-heading">
                  Clone via
                  HTTPS
                </span>
                  <span class="description">
                    Clone with Git or checkout with SVN using the repository's web address.
                  </span>
                <span class="js-select-button-text hidden-select-button-text">
                  <div class="input-group-button">
  <button type="button" class="btn btn-sm select-menu-button js-menu-target" data-ga-click="Repository, clone HTTPS, location:repo overview">
    HTTPS
  </button>
</div>
<input type="text" class="input-monospace input-mini js-zeroclipboard-target js-url-field" value="https://gist.github.com/7622137.git" readonly>
<div class="input-group-button">
  <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy "></span></button>
</div>

                </span>
              </div>
            </div>
        </div>
        <div class="select-menu-list" role="menu">
          <a class="select-menu-item select-menu-action" href="https://help.github.com/articles/which-remote-url-should-i-use" target="_blank">
            <span class="octicon octicon-question select-menu-item-icon"></span>
            <div class="select-menu-item-text">
              Learn more about clone URLs
            </div>
          </a>
        </div>
      </div>
    </div>
  </div>
</div>


    <div class="file-navigation-option">
</div>


    <div class="file-navigation-option">
      <a href="https://gist.github.com/maicki/7622137/archive/ebc443540b9c0099a130a1aa6320074fa2990dd9.zip"
          class="btn btn-sm"
          rel="nofollow"
          data-ga-click="Gist, download zip, location:gist overview">
        Download ZIP
      </a>
    </div>
  </div>

  <div class="left">
    <nav class="reponav js-repo-nav js-sidenav-container-pjax js-octicon-loaders"
     role="navigation"
     data-pjax="#gist-pjax-container">

  <a href="7622137" aria-label="Code" aria-selected="true" class="js-selected-navigation-item selected reponav-item" data-hotkey="g c" data-pjax="true" data-selected-links="gist_code /maicki/7622137">
    <span class="octicon octicon-code "></span>
    Code
</a>
    <a href="https://gist.github.com/maicki/7622137/revisions" aria-label="Revisions" class="js-selected-navigation-item reponav-item" data-hotkey="g r" data-pjax="true" data-selected-links="gist_revisions /maicki/7622137/revisions">
      <span class="octicon octicon-git-commit "></span>
      Revisions
      <span class="counter">2</span>
</a>
    <a href="https://gist.github.com/maicki/7622137/stargazers" aria-label="Stars" class="js-selected-navigation-item reponav-item" data-hotkey="g s" data-pjax="true" data-selected-links="gist_stars /maicki/7622137/stargazers">
      <span class="octicon octicon-star "></span>
      Stars
      <span class="counter">28</span>
</a>
    <a href="https://gist.github.com/maicki/7622137/forks" aria-label="Forks" class="js-selected-navigation-item reponav-item" data-hotkey="g f" data-pjax="true" data-selected-links="gist_forks /maicki/7622137/forks">
      <span class="octicon octicon-git-branch "></span>
      Forks
      <span class="counter">5</span>
</a></nav>

  </div>
</div>


    </div><!-- /.container -->
  </div><!-- /.repohead -->

<div class="container new-discussion-timeline experiment-repo-nav">
  <div class="repository-content gist-content context-loader-container">
    



<div>
  <div class="repository-meta js-details-container">
  <div class="repository-meta-content">
    Chrome Packaged Apps
  </div>
</div>


      <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-chromepackagedapps-md" class="file">
      <div class="file-header">
        <div class="file-actions">

          <a href="https://gist.github.com/maicki/7622137/raw/ebc443540b9c0099a130a1aa6320074fa2990dd9/ChromePackagedApps.md" class="btn btn-sm ">Raw</a>
        </div>
        <div class="file-info">
          <span class="icon">
            <span class="octicon octicon-gist "></span>
          </span>
          <a class="tooltipped tooltipped-s css-truncate" aria-label="Permalink" href="7622137#file-chromepackagedapps-md">
            <strong class="user-select-contain gist-blob-name css-truncate-target">
              ChromePackagedApps.md
            </strong>
          </a>
        </div>
      </div>
    
  <div id="readme" class="blob instapaper_body">
    <article class="markdown-body entry-content" itemprop="mainContentOfPage"><h2><a id="user-content-chrome-packaged-apps" class="anchor" href="7622137#chrome-packaged-apps" aria-hidden="true"><span class="octicon octicon-link"></span></a>Chrome Packaged Apps</h2>

<h3><a id="user-content-introduction" class="anchor" href="7622137#introduction" aria-hidden="true"><span class="octicon octicon-link"></span></a>Introduction</h3>

<p>Introduced at <a href="http://www.youtube.com/watch?v=j8oFAr1YR-0">Google I/O 2012</a>, Chrome packaged apps are a new way to develop apps that are running 'natively' within Chrome on the desktop as well as on Chrome mobile in the near future. I'm currently in the middle of a project where I develop a Chrome packaged app and in this article I would like to share my experience with the development of packaged apps.</p>

<p><strong>Please note:</strong> This article should give you a basic insight of topics that I think are helpful to know for developing packaged apps. Furthermore I will give links to each topic, so you can dive deeper into that specific topic if you want to. It's not the goal of this article to act as a complete introduction to Chrome packaged apps, for a much more detailed overview of packaged apps development, please look at the official packaged app <a href="http://developer.chrome.com/apps/about_apps.html">documentation</a>.</p>

<h3><a id="user-content-what-are-chrome-packaged-apps" class="anchor" href="7622137#what-are-chrome-packaged-apps" aria-hidden="true"><span class="octicon octicon-link"></span></a>What are Chrome Packaged Apps</h3>

<p>Chrome packaged apps are applications that can run 'natively' within the Chrome browser and are developed in HTML5, CSS and JavaScript. It's only necessary to have Chrome installed on the system of choice, to be able to run packaged apps. No other dependencies are necessary. This has the advantage that it's theoretically possible to run packaged apps on Mac, Windows, Linux or Chrome OS in the same way and with no extra work for the developer. Furthermore, Google is planning to extend the platform support for packaged apps, to run also on mobile in the near future.</p>

<h3><a id="user-content-basic-project-structure" class="anchor" href="7622137#basic-project-structure" aria-hidden="true"><span class="octicon octicon-link"></span></a>Basic project structure</h3>

<p>It's very easy to start developing a packaged app. The only necessary files in your project are a manifest file, an event page, also called background page, where you usually register listeners for specific app events, like a launch listener that opens the app's window and some kind of icon. A background page file can be a JavaScript or a HTML file.</p>

<p>At the following is an overview of a very sample project with no tests or any MV* framework included. It's just to give you a quick overview, how the start can look like.</p>

<p><strong>Project overview:</strong></p>

<p><a href="https://camo.githubusercontent.com/8769d06657c41d10fc725ab7b862aab111e7c5dd/687474703a2f2f662e636c2e6c792f6974656d732f33693241314730573146334333703055306730662f73616d706c652d70726f6a6563742d6f766572766965772e706e67" target="_blank"><img src="https://camo.githubusercontent.com/8769d06657c41d10fc725ab7b862aab111e7c5dd/687474703a2f2f662e636c2e6c792f6974656d732f33693241314730573146334333703055306730662f73616d706c652d70726f6a6563742d6f766572766965772e706e67" alt="Sample Project Overview" data-canonical-src="http://f.cl.ly/items/3i2A1G0W1F3C3p0U0g0f/sample-project-overview.png" style="max-width:100%;"></a></p>

<p><strong>manifest.json:</strong></p>

<div class="highlight highlight-source-json"><pre>{
  <span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>Sample App<span class="pl-pds">"</span></span>,
  <span class="pl-s"><span class="pl-pds">"</span>version<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span>,
  <span class="pl-s"><span class="pl-pds">"</span>manifest_version<span class="pl-pds">"</span></span>: <span class="pl-c1">2</span>,
  <span class="pl-s"><span class="pl-pds">"</span>minimum_chrome_version<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>23<span class="pl-pds">"</span></span>,
  <span class="pl-s"><span class="pl-pds">"</span>icons<span class="pl-pds">"</span></span>: {
    <span class="pl-s"><span class="pl-pds">"</span>128<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>icon_128.png<span class="pl-pds">"</span></span>
  },
  <span class="pl-s"><span class="pl-pds">"</span>app<span class="pl-pds">"</span></span>: {
    <span class="pl-s"><span class="pl-pds">"</span>background<span class="pl-pds">"</span></span>: {
      <span class="pl-s"><span class="pl-pds">"</span>scripts<span class="pl-pds">"</span></span>: [<span class="pl-s"><span class="pl-pds">"</span>background.js<span class="pl-pds">"</span></span>]
    }
  },
  <span class="pl-s"><span class="pl-pds">"</span>permissions<span class="pl-pds">"</span></span>: [
  ]
}</pre></div>

<p><strong>background.js:</strong></p>

<div class="highlight highlight-source-js"><pre><span class="pl-c">/**</span>
<span class="pl-c"> * Listens for the app launching then creates the window</span>
<span class="pl-c"> *</span>
<span class="pl-c"> * <span class="pl-k">@see</span> http://developer.chrome.com/trunk/apps/app.runtime.html</span>
<span class="pl-c"> * <span class="pl-k">@see</span> http://developer.chrome.com/trunk/apps/app.window.html</span>
<span class="pl-c"> */</span>
<span class="pl-smi">chrome</span>.<span class="pl-smi">app</span>.<span class="pl-smi">runtime</span>.<span class="pl-smi">onLaunched</span>.<span class="pl-en">addListener</span>(<span class="pl-k">function</span>() {
  <span class="pl-smi">chrome</span>.<span class="pl-smi">app</span>.<span class="pl-smi">window</span>.<span class="pl-en">create</span>(<span class="pl-s"><span class="pl-pds">'</span>app.html<span class="pl-pds">'</span></span>, {
    bounds<span class="pl-k">:</span> {
      width<span class="pl-k">:</span> <span class="pl-c1">880</span>,
      height<span class="pl-k">:</span> <span class="pl-c1">480</span>
    }
  });
});</pre></div>

<p><strong>app.html:</strong></p>

<div class="highlight highlight-text-html-basic"><pre>&lt;!doctype html&gt;
&lt;<span class="pl-ent">html</span>&gt;
&lt;<span class="pl-ent">head</span>&gt;
  &lt;<span class="pl-ent">meta</span> <span class="pl-e">charset</span>=<span class="pl-s"><span class="pl-pds">"</span>utf-8<span class="pl-pds">"</span></span> /&gt;
  &lt;<span class="pl-ent">title</span>&gt;Sample App&lt;/<span class="pl-ent">title</span>&gt;
&lt;/<span class="pl-ent">head</span>&gt;
&lt;<span class="pl-ent">body</span>&gt;
  Hello World!
&lt;/<span class="pl-ent">body</span>&gt;
&lt;/<span class="pl-ent">html</span>&gt;</pre></div>

<p>There are some steps to do to load your packaged app into Google Chrome. If you developed a Chrome extension before you may already familiar with the steps to do, if not, here is a quick overview from the <a href="http://goo.gl/UHCS8%EF%BB%BF">Chrome Packaged Apps Codelab guide</a>.</p>

<p><a href="https://camo.githubusercontent.com/eeeeae32b64d590d91f9943ecc97fcaf24cc82c2/687474703a2f2f662e636c2e6c792f6974656d732f3256326e306c314b336b326233623267307331352f6c6f61642d7061636b616765642d6170702e706e67" target="_blank"><img src="https://camo.githubusercontent.com/eeeeae32b64d590d91f9943ecc97fcaf24cc82c2/687474703a2f2f662e636c2e6c792f6974656d732f3256326e306c314b336b326233623267307331352f6c6f61642d7061636b616765642d6170702e706e67" alt="Load Packaged App" data-canonical-src="http://f.cl.ly/items/2V2n0l1K3k2b3b2g0s15/load-packaged-app.png" style="max-width:100%;"></a></p>

<ol>
<li>Access chrome://extensions</li>
<li>Activate the 'Developer mode' on the right top</li>
<li>With 'Load unpacked extension...' you can load your packaged app from a directory</li>
<li>Click on 'launch' within your packaged app entry in the extensions list to open the app</li>
</ol>

<p>If you start the packaged app within Chrome, it just opens a new plain window with "Hello World!". Now you can build on that basic project and start developing your packaged app.</p>

<p>You can find a lot of packaged app sample projects at the Google Chrome GitHub account in the <a href="https://github.com/GoogleChrome/chrome-app-samples">chrome-app-samples</a> repository.</p>

<h3><a id="user-content-offline-first" class="anchor" href="7622137#offline-first" aria-hidden="true"><span class="octicon octicon-link"></span></a>Offline first</h3>

<p>One of the first sentences you hear in talks from Google engineers or in the documentation about packaged apps is:</p>

<blockquote>
<p>"You need to consider offline first: write your app as if it has no internet connection!"</p>
</blockquote>

<p>What this mean is that packaged apps should run the same way, whether the user is offline or online. Therefore all HTML, CSS and JavaScript files as well as all further needed data like images, user data etc. needs to be on the local disk.</p>

<p>If you plan to develop an app that don't need any internet connection at all, you will be fine from the start on by just developing your packaged app and submit it to the Google Web Store. You don't have to loose so much thoughts how to run it offline. The reason is that the installation process of packaged apps via the Chrome Web Store downloads all the files bundled within your app to the local disk and the packaged app runs subsequently off of the local disk, in order to speed up performance and provide offline support. So all of your app files like HTML, CSS, JavaScript and fonts, plus other resources it needs (such as images) that are bundled within your application are already downloaded, no internet connection needed.</p>

<p>If you plan to develop a packaged app that needs an internet connection or you have to load external resources before the app is ready for usage, you have to do something more, to provide the best possible user experience, online and offline. There are different ways how to solve this problem.</p>

<ul>
<li>Your app can save and optionally sync small amounts of data using the Chrome Storage API.</li>
<li>Furthermore it's possible to store all needed data within IndexedDB</li>
<li>or via the HTML5 Filesystem API on the local disk.</li>
</ul>

<p>The next segments will go deeper into loading external resources like images or user data and persist it for offline usage.</p>

<h3><a id="user-content-get-external-resources" class="anchor" href="7622137#get-external-resources" aria-hidden="true"><span class="octicon octicon-link"></span></a><a id="user-content-get-external-resources"></a>Get External Resources</h3>

<p>One of the big challenges to provide the best user experience is to download and cache resources which are necessary for the app to run, but are not bundled within the app. This is not so trivial as it looks like, because packaged apps have strict security restrictions via the <a href="http://developer.chrome.com/apps/app_csp.html">CSP (Content Security Policy)</a>. It's a lot more effort to e.g. load images as just set the src attribute of an img element to the remote url directly in your HTML or dynamically via JavaScript. Instead you have to use XMLHttpRequest's to load the resource and then either refer to the data with a blob: URL or better, save and then load the data using the Filesystem API. The following code loads an image with a XMLHttpRequest object and refer the data in the img tag via a blob: URL.</p>

<div class="highlight highlight-source-js"><pre><span class="pl-c">// Take care of vendor prefixes</span>
<span class="pl-smi">window</span>.<span class="pl-c1">URL</span> <span class="pl-k">=</span> <span class="pl-smi">window</span>.<span class="pl-c1">URL</span> <span class="pl-k">||</span> <span class="pl-smi">window</span>.<span class="pl-smi">webkitURL</span>;

<span class="pl-k">var</span> xhr <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">XMLHttpRequest</span>();
<span class="pl-smi">xhr</span>.<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">'</span>GET<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>http://server/path/to/image.png<span class="pl-pds">'</span></span>, <span class="pl-c1">true</span>);
<span class="pl-smi">xhr</span>.<span class="pl-smi">responseType</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">'</span>blob<span class="pl-pds">'</span></span>;

<span class="pl-c1">xhr</span>.<span class="pl-en">onload</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">e</span>) {
  <span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">status</span> <span class="pl-k">==</span> <span class="pl-c1">200</span>) {
    <span class="pl-k">var</span> blob <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-smi">response</span>;

    <span class="pl-k">var</span> img <span class="pl-k">=</span> <span class="pl-smi">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">'</span>img<span class="pl-pds">'</span></span>);
    <span class="pl-c1">img</span>.<span class="pl-en">onload</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">e</span>) {
      <span class="pl-c">// Clean up after yourself</span>
      <span class="pl-smi">window</span>.<span class="pl-c1">URL</span>.<span class="pl-en">revokeObjectURL</span>(<span class="pl-smi">img</span>.<span class="pl-smi">src</span>);
    };
    <span class="pl-smi">img</span>.<span class="pl-smi">src</span> <span class="pl-k">=</span> <span class="pl-smi">window</span>.<span class="pl-c1">URL</span>.<span class="pl-en">createObjectURL</span>(blob);

    <span class="pl-c">// Do something with the img</span>
    <span class="pl-smi">document</span>.<span class="pl-c1">body</span>.<span class="pl-c1">appendChild</span>(img);
  }
};

<span class="pl-smi">xhr</span>.<span class="pl-c1">send</span>();
</pre></div>

<p>Luckily due to the reason that it's a common use case to load external resources, Google created a library to simplify that and it's called <a href="https://github.com/GoogleChrome/apps-resource-loader">apps-resource-loader</a>. What this library does is to check if the requested ressource is already offline available, if not, it downloads this resources via a XMLHttpRequest from the remote url and saves the data via the HTML5 Filesystem API. If the resource is already locally available, it loads this resource directly from the file system and no request to a server is needed anymore.</p>

<p>To be able to use the apps-resource-loader, you have to download / clone the <a href="https://github.com/GoogleChrome/apps-resource-loader">apps-ressource-files repository</a> and add the apps-resource-loader ral.min.js file into your project. The following code snippet should show you, how to load images with the apps-resource-loader into your app.</p>

<div class="highlight highlight-source-js"><pre><span class="pl-k">var</span> remoteImage,
    container <span class="pl-k">=</span> <span class="pl-smi">document</span>.<span class="pl-en">querySelector</span>(<span class="pl-s"><span class="pl-pds">'</span>.imageContainer<span class="pl-pds">'</span></span>),
    <span class="pl-c">// list of image URLs</span>
    toLoad <span class="pl-k">=</span> { <span class="pl-s"><span class="pl-pds">'</span>images<span class="pl-pds">'</span></span><span class="pl-k">:</span> [
       <span class="pl-s"><span class="pl-pds">'</span>http://myserver.com/image1.png<span class="pl-pds">'</span></span>,
       <span class="pl-s"><span class="pl-pds">'</span>http://myserver.com/image2.png<span class="pl-pds">'</span></span>
      ]
    };

<span class="pl-smi">toLoad</span>.<span class="pl-c1">images</span>.<span class="pl-en">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">imageToLoad</span>) {
  remoteImage <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">RAL.RemoteImage</span>(imageToLoad);
  <span class="pl-smi">container</span>.<span class="pl-c1">appendChild</span>(<span class="pl-smi">remoteImage</span>.<span class="pl-smi">element</span>);
  <span class="pl-smi">RAL</span>.<span class="pl-smi">Queue</span>.<span class="pl-c1">add</span>(remoteImage);
});
<span class="pl-smi">RAL</span>.<span class="pl-smi">Queue</span>.<span class="pl-en">setMaxConnections</span>(<span class="pl-c1">4</span>);
<span class="pl-smi">RAL</span>.<span class="pl-smi">Queue</span>.<span class="pl-c1">start</span>();</pre></div>

<p>Furthermore to get this code running you need permission in the manifest.json to all domains you will be try to get the resource or if you don't know before where those resources will be hosted, you can ask permission for any url.</p>

<div class="highlight highlight-source-json"><pre>permissions: [<span class="pl-ii">'&lt;all_urls&gt;'</span>]</pre></div>

<p>This is just one example where you need to add permissions to the manifest file. To use most chrome.* APIs, your app must declare its intent in the "permissions" field of the manifest but you will find further information what chrome.* API needs which permission in the correspondent <a href="http://developer.chrome.com/apps/api_index.html">chrome.* API</a> documentation.</p>

<p>It's also worth mentioning that you can roll your own library, if the apps-resource-loader library does not suit you. A good starting point is to look at the apps-resource-loader library to get a general idea, how to load external resources via a XMLHttpRequest, refer the data with a blob: URL and save it afterwards on the file system. Another good article is on HTML5Rocks called <a href="http://www.html5rocks.com/en/tutorials/file/xhr2/">New Tricks in XMLHttpRequest2</a> that tells you more details about fetching data via XMLHttpRequest and the 'blob' responseType.</p>

<h3><a id="user-content-offline-storage" class="anchor" href="7622137#offline-storage" aria-hidden="true"><span class="octicon octicon-link"></span></a>Offline Storage</h3>

<p>If you don't want to use the apps-resource-loader library mentioned above or you have to store other data then images or plain files, it's good to know what further possibilities HTML5 or Google APIs provides for you to store data. In general, how you save remote data locally is up to you, but the following list should give you quick overview, what you can use to store data for faster access and offline usage.</p>

<h4><a id="user-content-chrome-storage-api" class="anchor" href="7622137#chrome-storage-api" aria-hidden="true"><span class="octicon octicon-link"></span></a>Chrome Storage API</h4>

<p>The <a href="http://developer.chrome.com/apps/storage.html">Chrome Storage API</a> comes in two flavors. You can use either the chrome.storage.sync or chrome.storage.local API. When using chrome.storage.sync, the stored data will automatically be synced to any Chrome browser that the user is logged into, provided the user has sync enabled. When Chrome is offline, Chrome stores the data locally. The next time the browser is online, Chrome syncs the data. Even if a user disables syncing, storage.sync will still work. In this case, it will behave identically to chrome.storage.local.</p>

<div class="highlight highlight-source-js"><pre><span class="pl-c">// Save data using the Chrome extension storage API.</span>
<span class="pl-k">var</span> theValue <span class="pl-k">=</span> ...;
<span class="pl-smi">chrome</span>.<span class="pl-smi">storage</span>.<span class="pl-smi">sync</span>.<span class="pl-en">set</span>({<span class="pl-s"><span class="pl-pds">'</span>value<span class="pl-pds">'</span></span><span class="pl-k">:</span> theValue}, <span class="pl-k">function</span>() {
  <span class="pl-c">// Saved successfully</span>
});</pre></div>

<p>The Chrome Storage API is great for saving user settings, application state or smaller chunks of data. It's not very good for large amount of data, due to quota limitations. For larger data, IndexedDB and the HTML5 Filesystem API is a better choice.</p>

<h4><a id="user-content-indexeddb" class="anchor" href="7622137#indexeddb" aria-hidden="true"><span class="octicon octicon-link"></span></a>IndexedDB</h4>

<p>IndexedDB is a Web Database. Web Databases are hosted and persisted inside an user's browser. IndexedDB is an Object Store that means, that it's is not the same as a Relational Database, which has tables, with collections rows and columns. You don't have any tables within IndexedDB, you create an Object Store for a type of data and simply persist JavaScript Objects to that store. Each Object Store can have a collection of Indexes that make it efficient to query and iterate across. So IndexedDB is best used for storing structured data and it enables fast searches on data via Indexes.</p>

<p>Using IndexedDB is much more complicated than using the Chrome Storage API. The following code is an example from the HTML5Rocks article <a href="http://www.html5rocks.com/en/tutorials/indexeddb/todo/">A Simple TODO list using HTML5 IndexedDB</a> that saves a to do text in an IndexedDB Object Store.</p>

<div class="highlight highlight-source-js"><pre><span class="pl-c1">html5rocks.indexedDB</span>.<span class="pl-en">addTodo</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">todoText</span>) {
  <span class="pl-k">var</span> db <span class="pl-k">=</span> <span class="pl-smi">html5rocks</span>.<span class="pl-smi">indexedDB</span>.<span class="pl-smi">db</span>;
  <span class="pl-k">var</span> trans <span class="pl-k">=</span> <span class="pl-smi">db</span>.<span class="pl-en">transaction</span>([<span class="pl-s"><span class="pl-pds">"</span>todo<span class="pl-pds">"</span></span>], <span class="pl-s"><span class="pl-pds">"</span>readwrite<span class="pl-pds">"</span></span>);
  <span class="pl-k">var</span> store <span class="pl-k">=</span> <span class="pl-smi">trans</span>.<span class="pl-en">objectStore</span>(<span class="pl-s"><span class="pl-pds">"</span>todo<span class="pl-pds">"</span></span>);
  <span class="pl-k">var</span> request <span class="pl-k">=</span> <span class="pl-smi">store</span>.<span class="pl-en">put</span>({
    <span class="pl-s"><span class="pl-pds">"</span>text<span class="pl-pds">"</span></span><span class="pl-k">:</span> todoText,
    <span class="pl-s"><span class="pl-pds">"</span>timeStamp<span class="pl-pds">"</span></span> <span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">Date</span>().<span class="pl-c1">getTime</span>()
  });

  <span class="pl-c1">request</span>.<span class="pl-en">onsuccess</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">e</span>) {
    <span class="pl-c">// Re-render all the todo's</span>
    <span class="pl-smi">html5rocks</span>.<span class="pl-smi">indexedDB</span>.<span class="pl-en">getAllTodoItems</span>();
  };

  <span class="pl-c1">request</span>.<span class="pl-en">onerror</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">e</span>) {
    <span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-smi">e</span>.<span class="pl-c1">value</span>);
  };
};</pre></div>

<p>A good starting point to get more information about IndexedDB, is the aforementioned HTML5Rocks article and an article on the Mozilla Developer Network: <a href="https://developer.mozilla.org/en-US/docs/IndexedDB/Basic_Concepts_Behind_IndexedDB">Basic Concepts Behind IndexedDB</a>.</p>

<h4><a id="user-content-html5-filesystem-api" class="anchor" href="7622137#html5-filesystem-api" aria-hidden="true"><span class="octicon octicon-link"></span></a>HTML5 Filesystem API</h4>

<p>The HTML5 Filesystem API gives web applications controlled access to a private local filesystem 'sandbox' in which they can read / write files, create and list directories, and so on. You can find the File API: Directories and System working draft on the <a href="http://dev.w3.org/2009/dap/file-system/pub/FileSystem/">W3C website</a>. With the Filesystem API you can basically save all kinds of data to the local disk. The following code sample from the excellent article on HTML5Rocks called <a href="http://www.html5rocks%20provides%20a%20first%20insight%20in%20what%20the%20Filesystem%20API%20looks%20like.%20The%20code%20creates%20an%20empty%20file%20called%20%22log.txt%22%20(if%20it%20doesn't%20exist">Exploring the FileSystem APIs</a> and fills it with the text 'Lorem Ipsum'.</p>

<div class="highlight highlight-source-js"><pre><span class="pl-k">function</span> <span class="pl-en">onInitFs</span>(<span class="pl-smi">fs</span>) {

  <span class="pl-smi">fs</span>.<span class="pl-smi">root</span>.<span class="pl-en">getFile</span>(<span class="pl-s"><span class="pl-pds">'</span>log.txt<span class="pl-pds">'</span></span>, {create<span class="pl-k">:</span> <span class="pl-c1">true</span>}, <span class="pl-k">function</span>(<span class="pl-smi">fileEntry</span>) {

    <span class="pl-c">// Create a FileWriter object for our FileEntry (log.txt).</span>
    <span class="pl-smi">fileEntry</span>.<span class="pl-en">createWriter</span>(<span class="pl-k">function</span>(<span class="pl-smi">fileWriter</span>) {

      <span class="pl-c1">fileWriter</span>.<span class="pl-en">onwriteend</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">e</span>) {
        <span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">'</span>Write completed.<span class="pl-pds">'</span></span>);
      };

      <span class="pl-c1">fileWriter</span>.<span class="pl-en">onerror</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">e</span>) {
        <span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">'</span>Write failed: <span class="pl-pds">'</span></span> <span class="pl-k">+</span> <span class="pl-smi">e</span>.<span class="pl-c1">toString</span>());
      };

      <span class="pl-c">// Create a new Blob and write it to log.txt.</span>
      <span class="pl-k">var</span> blob <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Blob</span>([<span class="pl-s"><span class="pl-pds">'</span>Lorem Ipsum<span class="pl-pds">'</span></span>], {type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>text/plain<span class="pl-pds">'</span></span>});

      <span class="pl-smi">fileWriter</span>.<span class="pl-c1">write</span>(blob);

    }, errorHandler);

  }, errorHandler);
}

<span class="pl-smi">window</span>.<span class="pl-en">requestFileSystem</span>(<span class="pl-smi">window</span>.<span class="pl-c1">TEMPORARY</span>, <span class="pl-c1">1024</span><span class="pl-k">*</span><span class="pl-c1">1024</span>, onInitFs, errorHandler);</pre></div>

<p>One library I would like to mention within this context is <a href="https://github.com/ebidel/filer.js">filer.js</a>. Filer.js is a wrapper library for the HTML5 Filesystem API, what reuses UNIX commands (cp, mv, ls) for its API and is a huge help, if you want to interact with the HTML5 Filesystem API. For comparison, the following  code does the same as the code from above, but uses filer.js for that.</p>

<div class="highlight highlight-source-js"><pre><span class="pl-c">// Write string data.</span>
<span class="pl-smi">filer</span>.<span class="pl-c1">write</span>(<span class="pl-s"><span class="pl-pds">'</span>log.txt<span class="pl-pds">'</span></span>, {data<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>Lorem Ipsum<span class="pl-pds">'</span></span>, type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>text/plain<span class="pl-pds">'</span></span>},
  <span class="pl-k">function</span>(<span class="pl-smi">fileEntry</span>, <span class="pl-smi">fileWriter</span>) {
    ...
  },
  <span class="pl-c1">onError</span>
);</pre></div>

<h3><a id="user-content-embedding-external-content" class="anchor" href="7622137#embedding-external-content" aria-hidden="true"><span class="octicon octicon-link"></span></a><a id="user-content-embed-external-content"></a>Embedding external content</h3>

<p>With the tight restrictions of packaged apps via the CSP, it's not possible to run iframes within packaged apps. Maybe you will ask yourself now: but how can I embed external content like YouTube / Vimeo videos or social widgets in my packaged app then? For this functionality Google provides the <a href="http://developer.chrome.com/dev/apps/webview_tag.html">webview tag</a>.</p>

<p>You can use the webview tag to embed any kind of 'guest' content (such as web pages, videos, social widgets) in your packaged app. The guest content is contained within the webview container; an embedder page within your packaged app controls how the guest content is laid out and rendered. One of the big differences between iframes and the webview tag is that the each webview runs in a separate process than your app, it doesn't have the same permissions as your app and all interactions between your app and embedded content will be asynchronous. This keeps your app safe from the embedded content.</p>

<p>The following code loads an external page into the packaged app via the webview tag ...</p>

<div class="highlight highlight-source-js"><pre>...
<span class="pl-k">&lt;</span>webview src<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>http://google.com<span class="pl-pds">"</span></span> style<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>width:640px; height:480px<span class="pl-pds">"</span></span><span class="pl-k">&gt;&lt;</span><span class="pl-k">/</span>webview<span class="pl-k">&gt;</span>
...</pre></div>

<p>... and you can use the following code to embed a YouTube video within your app.</p>

<div class="highlight highlight-source-js"><pre>...
<span class="pl-k">&lt;</span>webview src<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>http://www.youtube.com/embed/a1Y73sPHKxw<span class="pl-pds">"</span></span> style<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>width:640px; height:480px<span class="pl-pds">"</span></span><span class="pl-k">&gt;&lt;</span><span class="pl-k">/</span>webview<span class="pl-k">&gt;</span>
...</pre></div>

<p>The webview tag was developed in a way so that you can have a lot of webviews at the same time within your app and it should not have a big influence on performance. So it's no problem for you, to embed multiple videos or guest sites into your app. You will find this information and a lot of further tips about the webview tag in the <a href="http://www.youtube.com/watch?v=cervjrVRLjA">Chrome Apps Office Hours - the WebView Control</a> video as well as in the documentation for the <a href="http://developer.chrome.com/dev/apps/webview_tag.html">webview tag</a>.</p>

<h3><a id="user-content-web-application-frameworks" class="anchor" href="7622137#web-application-frameworks" aria-hidden="true"><span class="octicon octicon-link"></span></a>Web Application Frameworks</h3>

<p>For bigger packaged apps it may be clever to use a web framework. Within packaged apps, it's no problem at all, to use a web framework. Just to mention a few in this paragraph: <a href="http://angularjs.org/">AngularJS</a> is a web framework developed directly within Google. Unlike many other JavaScript MV* frameworks, AngularJS starting with version 1.1.0 and up requires no tweaks to work within a strict CSP like packaged apps have. Further frameworks are <a href="http://emberjs.com/">Ember.js</a> or <a href="http://backbonejs.org/">Backbone.js</a>.</p>

<p>I will not go any further into web frameworks in this article as this article is not about web frameworks, I just wanted to mention that you should have no problem to use a web framework within a packaged app. Whatever, if you want a further overview of web frameworks, I would like to point you to <a href="http://todomvc.com/">TodoMVC</a>. TodoMVC compares and provides further information of the many many web frameworks that are out there at the moment.</p>

<h3><a id="user-content-restrictions" class="anchor" href="7622137#restrictions" aria-hidden="true"><span class="octicon octicon-link"></span></a>Restrictions</h3>

<p>If you start developing a packaged app or try to convert a existing web app to a packaged app, you will stumble upon some things that will work differently in packaged apps as expected. Furthermore you will have restrictions that have something to do with the CSP that is very strict within the packaged app infrastructure. At the following are a couple of these restrictions and some short tips what you can use instead of. You will find a full list of all <a href="http://developer.chrome.com/apps/app_deprecated.html">Disabled Web Features</a> in packaged apps over at the corresponding documentation.</p>

<h4><a id="user-content-access-remote-resources" class="anchor" href="7622137#access-remote-resources" aria-hidden="true"><span class="octicon octicon-link"></span></a>Access remote resources</h4>

<p>As often mentioned in this article, it's not allowed to access remote resources directly. You have to use cross-origin XMLHttpRequests to fetch these resources and then serve them via blob: URLs as described within the <a href="7622137#get-external-resources">Get External Resources</a> segment in this article.</p>

<h4><a id="user-content-no-localstorage" class="anchor" href="7622137#no-localstorage" aria-hidden="true"><span class="octicon octicon-link"></span></a>No localStorage</h4>

<p>The localStorage API is disabled by default. The main reason is that it's synchronously and this means, it can be slow in some circumstances. So if you want to save data that you would normally store into localStorage, you should use the <a href="http://developer.chrome.com/apps/storage.html">Chrome Storage API</a> and if you want to persists larger amount of data use IndexedDB or the HTML5 Filesystem API.</p>

<h4><a id="user-content-no-inline-scripts" class="anchor" href="7622137#no-inline-scripts" aria-hidden="true"><span class="octicon octicon-link"></span></a>No inline scripts</h4>

<p>Another restriction from the CSP is no inline scripts. I think it's not so a big deal that it's not allowed to use inline scripts, because it's not so good practice anyway. Just extract all inline scripts from your app and port it to an external script.</p>

<h4><a id="user-content-no-string-to-javascript-methods-like-eval-and-function" class="anchor" href="7622137#no-string-to-javascript-methods-like-eval-and-function" aria-hidden="true"><span class="octicon octicon-link"></span></a>No string-to-JavaScript methods like eval() and function()</h4>

<p>This is especially a problem, if you want to use certain templating languages that make use of eval() or function(). Maybe the best way to deal with this, is to use a library that offers precompiled templates and you should be all set. <br>
You can still use a library that doesn't offer precompilation, but it will require some extra work on your part and there are further restrictions. You will need to use <a href="http://developer.chrome.com/apps/app_external.html#sandboxing">sandboxing</a> to isolate any content that you want to do 'eval' things to. Sandboxing lifts CSP on the content that you specify. If you want to use the very powerful Chrome APIs in your packaged app, your sandboxed content can't directly interact with these APIs.</p>

<h4><a id="user-content-embed-web-content" class="anchor" href="7622137#embed-web-content" aria-hidden="true"><span class="octicon octicon-link"></span></a>Embed web content</h4>

<p>It's not allowed to use iframes within packaged apps. In this article, I already describe a way how to <a href="7622137#embed-external-content">embed external content</a> via the webview tag. <br>
Another way is to <a href="http://developer.chrome.com/apps/app_external.html#sandboxing">sandbox local content</a>. Sandboxing allows specified pages to be served in a sandboxed, unique origin. These pages are then exempt from their Content Security Policy. Sandboxed pages can use iframes, inline scripting, and eval().</p>

<h4><a id="user-content-no-alert-method" class="anchor" href="7622137#no-alert-method" aria-hidden="true"><span class="octicon octicon-link"></span></a>No alert() method</h4>

<p>I think it's not so good to use the alert() method at all to provide any feedback to the user, but if you plan to do so, you have to find a better way. Within packaged apps it's not allowed to use alert(). A better way would be to have some kind of general notification component that can show different kind of notifications like errors, general informations etc. If it's a slider view from the top or any kind of popup that's totally up to you, you should know what's the best is for your app, but with such a component in place, you have a lot of opportunities to show the user notifications and information in a general way throughout the app.</p>

<h4><a id="user-content-no-html5-history-api" class="anchor" href="7622137#no-html5-history-api" aria-hidden="true"><span class="octicon octicon-link"></span></a>No HTML5 History API</h4>

<p>The HTML 5 History API is not accessible within packaged apps. You have to find your own way how to handle the routing within your app as well as handle the application state.</p>

<h4><a id="user-content-scrolling" class="anchor" href="7622137#scrolling" aria-hidden="true"><span class="octicon octicon-link"></span></a>Scrolling</h4>

<p>If you work on a packaged app maybe you will come to a point where you will ask yourself, why you cannot scroll within the packaged app window, although the content is longer then the window. The reason is that you have make the content scrollable. For most of you this it will be obvious to resolve this problem but if not, just add the following css to your stylesheet and you should be good to go on scrolling of your site.</p>

<div class="highlight highlight-source-css"><pre><span class="pl-ent">html</span> {
  <span class="pl-c1"><span class="pl-c1">overflow-y</span></span>:<span class="pl-c1">scroll</span>;
}</pre></div>

<p>Another restriction or problem if you are currently thinking of porting your web app to a packaged app is that you have to develop a packaged app in HTML, CSS and JavaScript. It's not possible to run any PHP, Python, Ruby etc. code within a packaged app. If you developed your web app with web frameworks like AngularJS or Ember.js or you used plain HTML, CSS and JavaScript without any framework, you are good to go else you need to to do some extra work to get your web app running as a packaged app. If you are currently starting or in the middle of developing your web app and plan to port it later to a packaged app, it's good to have some points in mind:</p>

<h4><a id="user-content-develop-against-your-public-api-from-the-start" class="anchor" href="7622137#develop-against-your-public-api-from-the-start" aria-hidden="true"><span class="octicon octicon-link"></span></a>Develop against your public API from the start</h4>

<p>If you use some kind of backend component in your web app, don't use any PHP code to connect to your backend with your frontend. Develop your web app as you would develop a third party app that is connecting to your public API and use plain HTML, CSS and JavaScript or develop it with the help of a web framework.</p>

<h4><a id="user-content-try-to-develop-your-web-app-component-based" class="anchor" href="7622137#try-to-develop-your-web-app-component-based" aria-hidden="true"><span class="octicon octicon-link"></span></a>Try to develop your web app component based</h4>

<p>That's especially good if you want to share code between your web and your packaged app. In your web app most of the time it's not so necessary to save any external resource to the hard drive or in a database. If you have a good app architecture it's very easy to share most of the code between the web and packaged app and just replace or add components that are specific for either one, like the syncing and offline storage component for the packaged app that maybe you will not need in your web app.</p>

<h3><a id="user-content-suggestions-for-improvements" class="anchor" href="7622137#suggestions-for-improvements" aria-hidden="true"><span class="octicon octicon-link"></span></a>Suggestions for Improvements</h3>

<p>There is everytime and everywhere room for improvements. The following list includes a couple of thoughts from my side for packaged apps improvements.</p>

<h4><a id="user-content-installing-a-packaged-app--extension-with-one-click" class="anchor" href="7622137#installing-a-packaged-app--extension-with-one-click" aria-hidden="true"><span class="octicon octicon-link"></span></a>Installing a Packaged App + Extension with one click</h4>

<p>If you plan or in the middle of developping a packaged app, it's very likely that you have some experience with developping of Chrome extensions before. As packaged apps as well as the Chrome extensions can be installed from the Chrome Web Store, a really good move from Google would be to provide a way for the user the decide, if the user wants to install not only the packaged app or extension separately but to combine both and with one click extension and packaged app gets installed on the users system.</p>

<h4><a id="user-content-native-window-frame" class="anchor" href="7622137#native-window-frame" aria-hidden="true"><span class="octicon octicon-link"></span></a>Native window frame</h4>

<p>If you open a packaged app you will notice the white frame around the packaged app window.</p>

<p><a href="https://camo.githubusercontent.com/b66230199c4cfb6d9ee4b985c19ba2b35f1bf65c/687474703a2f2f662e636c2e6c792f6974656d732f31443351336832563375317433313054325933672f77686974652d746f6f6c6261722e706e67" target="_blank"><img src="https://camo.githubusercontent.com/b66230199c4cfb6d9ee4b985c19ba2b35f1bf65c/687474703a2f2f662e636c2e6c792f6974656d732f31443351336832563375317433313054325933672f77686974652d746f6f6c6261722e706e67" alt="White Toolbar" data-canonical-src="http://f.cl.ly/items/1D3Q3h2V3u1t310T2Y3g/white-toolbar.png" style="max-width:100%;"></a></p>

<p>To let packaged app feels more like a native running app on a system, it would be good to have a native looking window frame for packaged apps on each of the operating systems.</p>

<h4><a id="user-content-menu-entries-in-the-mac-menu-bar-should-be-the-packaged-app-specific" class="anchor" href="7622137#menu-entries-in-the-mac-menu-bar-should-be-the-packaged-app-specific" aria-hidden="true"><span class="octicon octicon-link"></span></a>Menu Entries in the Mac Menu Bar should be the packaged app specific</h4>

<p>If you on a Mac, you know that within OS X, if you switch to an app, the menu bar entries at the top changes to app specific entries. If you switch to a packaged app at the moment, it's still the Chrome menu bar entries.</p>

<p><a href="https://camo.githubusercontent.com/4a5dc53f8a668040e696a9a90d26bc51e58eeceb/687474703a2f2f662e636c2e6c792f6974656d732f3035305830713255304a306e3247335a316430772f6f73782d6d656e752d6261722e706e67" target="_blank"><img src="https://camo.githubusercontent.com/4a5dc53f8a668040e696a9a90d26bc51e58eeceb/687474703a2f2f662e636c2e6c792f6974656d732f3035305830713255304a306e3247335a316430772f6f73782d6d656e752d6261722e706e67" alt="OSX Menubar" data-canonical-src="http://f.cl.ly/items/050X0q2U0J0n2G3Z1d0w/osx-menu-bar.png" style="max-width:100%;"></a></p>

<p>One great possibilities for developers would be, to be able define packaged app specific menu bar entries. I'm sure on Windows or Linux there is some similar as app specific menu entries.</p>

<h3><a id="user-content-conclusion" class="anchor" href="7622137#conclusion" aria-hidden="true"><span class="octicon octicon-link"></span></a>Conclusion</h3>

<p>Google gives us developer a new possibility to create apps on top of Chrome. If you are familiar with development for the web, you are good to go to within minutes. The goal of this article was to give a quick overview of the architecture of packaged apps and provide some further notes about my experiences with packaged app development, Google's offer to write apps for the desktop. Chrome packaged apps are a new direction from Google to entering the desktop and mobile market and we will see what Google and the we developer will make with it in the future.</p>

<h3><a id="user-content-further-ressources" class="anchor" href="7622137#further-ressources" aria-hidden="true"><span class="octicon octicon-link"></span></a>Further ressources</h3>

<ul>
<li><a href="http://developer.chrome.com/apps/about_apps.html">What are Packaged Apps?</a></li>
<li><a href="http://www.youtube.com/watch?v=f2tJRXDTMuY">Google I/O 2013 - The Chrome Packaged Apps State of the Nation</a></li>
<li><a href="http://www.youtube.com/watch?v=e0W2szZ2qhg">Google I/O 2013 - Upgrading to a Chrome Packaged App</a></li>
<li><a href="http://www.youtube.com/user/ChromeDevelopers">Chrome Developers YouTube Channel</a></li>
</ul>
</article>
  </div>

  </div>
  
</div>


  <a name="comments"></a>
  <div class="discussion-timeline gist-discussion-timeline js-quote-selection-container ">
    <div class="js-discussion js-socket-channel" data-channel="maicki/7622137:marked-as-read:7622137">
      




<!-- Rendered timeline since 2015-12-29 01:09:17 -->
<div id="partial-timeline-marker"
      class="js-timeline-marker js-socket-channel js-updatable-content"
      data-channel="maicki/7622137:gist:7622137"
      data-url="/maicki/7622137/show_partial?partial=gist%2Ftimeline_marker&amp;since=1451380157"
      data-last-modified="Tue, 29 Dec 2015 09:09:17 GMT"
      >
</div>


      <div class="discussion-timeline-actions">
          <div class="signed-out-comment">
	<a href="https://gist.github.com/join" class="btn btn-primary" rel="nofollow">Sign up for free</a>
	<strong>to join this conversation on GitHub</strong>.
	Already have an account?
	<a href="https://gist.github.com/login?return_to=https%3A%2F%2Fgist.github.com%2Fmaicki%2F7622137" rel="nofollow">Sign in to comment</a>
</div>

      </div>
    </div>
  </div>
</div>
  </div>

  <div class="modal-backdrop"></div>
</div><!-- /.container -->

    </div><!-- /.gist-pjax-container -->
  </div>

    </div>

        <div class="container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links right">
        <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
      <li><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>
        <li><a href="https://github.com/pricing" data-ga-click="Footer, go to pricing, text:pricing">Pricing</a></li>

    </ul>

    <a href="https://github.com" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github " title="GitHub "></span>
</a>
    <ul class="site-footer-links">
      <li>&copy; 2016 <span title="0.07424s from github-fe120-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact</a></li>
        <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>
    </ul>
  </div>
</div>



    
    
    

    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <button type="button" class="flash-close js-flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
        <span class="octicon octicon-x"></span>
      </button>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-ef8eb4a89ee9f3c8b7613307fe589a8f5705817f7cee27bec51ce5e963234abf.js"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-5b83ba63ee585108ecb82c170d0e6cd00e424114f31ecc0de1cf982e536b70d8.js"></script>
      
      
      
    <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner hidden">
      <span class="octicon octicon-alert"></span>
      <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="7622137">Reload</a> to refresh your session.</span>
      <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="7622137">Reload</a> to refresh your session.</span>
    </div>
  </body>
</html>

