<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width">

  <title>NodeMCU Docs | mqtt module</title>

  <!-- jQuery -->
  <script src="assets/js/jquery-1.11.1.min.js"></script>

  <!-- Let me embed vines -->
  <!--
  <script async src="//platform.vine.co/static/scripts/embed.js" charset="utf-8"></script>
  -->
  
  <!-- Favicon -->
  <link rel="shortcut icon" href="assets/orange.ico" type="image/x-icon">

  <!-- Vendor theme mods -->
  <script src="assets/js/jquery-styling.js"></script>
  <script src="assets/js/prettify.js"></script>
  <!-- <script src='../assets/js/scrollspy.js'></script> -->

  <!-- Spark theme mods -->
  <link href="assets/css/style.css" rel="stylesheet">
  <script src="assets/js/animated-core.js"></script>

  <!-- Meta -->
  <meta content="NodeMCU" property="og:title">
  <meta content="Documentation for NodeMCU, a platform for connected devices." name="description">

</head>
<body role="flatdoc">

  <div id="docs">
    <div class="header">
      <div class="left">
        <a href="https://www.nodemcu.com">
          <img src="assets/images/nodemcu-docs.png" id="logo">
        </a>
      </div>
      <div class="right">
        <!--
        <a href="../assets/docs.zip" class="icon"><i class="icon ion-arrow-down-a"></i></a>
        -->
        <a href="http://www.github.com/nodemcu/nodemcu-firmware" class="icon"><i class="icon ion-social-github"></i></a>
        <!--
        <a href="https://github.com/spark/docs/edit/master/src/content/mqtt-module.md" class="button">Edit this page</a>
        -->
      </div>
    </div>

    <div class="content-root" data-spy="scroll" data-target="#toc">
      <div class="menubar">
        <div class="menu section" role="flatdoc-menu">
          <ul>
            
              <li><a href="index.1" class="level-0 ">Index</a></li>
            
              <li><a href="node-module" class="level-0 ">node module</a></li>
            
              <li><a href="file-module" class="level-0 ">file module</a></li>
            
              <li><a href="wifi-module" class="level-0 ">wifi module</a></li>
            
              <li><a href="wifi-sta-module" class="level-0 ">wifi.sta module</a></li>
            
              <li><a href="wifi-ap-module" class="level-0 ">wifi.ap module</a></li>
            
              <li><a href="timer-module" class="level-0 ">timer module</a></li>
            
              <li><a href="gpio-module" class="level-0 ">GPIO module</a></li>
            
              <li><a href="pwm-module" class="level-0 ">PWM module</a></li>
            
              <li><a href="net-module" class="level-0 ">net module</a></li>
            
              <li><a href="net-server-module" class="level-0 ">net.server module</a></li>
            
              <li><a href="net-socket-module" class="level-0 ">net.socket module</a></li>
            
              <li><a href="i2c-module" class="level-0 ">i2c module</a></li>
            
              <li><a href="adc-module" class="level-0 ">adc module</a></li>
            
              <li><a href="uart-module" class="level-0 ">uart module</a></li>
            
              <li><a href="onewire-module" class="level-0 ">onewire module</a></li>
            
              <li><a href="bit-module" class="level-0 ">bit module</a></li>
            
              <li><a href="spi-module" class="level-0 ">spi module</a></li>
            
              <li><a href="mqtt-module" class="level-0 active">mqtt module</a></li>
            
              <li><a href="mqtt-client-module" class="level-0 ">mqtt client module</a></li>
            
          </ul>
        </div>
        <div class="menu section" role="flatdoc-menu">
          <ul id="toc">
          <li id="mqtt-module-item" class="level-1"><a id="mqtt-module-link" href="mqtt-module#mqtt-module" class="level-1">mqtt module</a></li><li id="mqtt-module-constant-item" class="level-2"><a id="mqtt-module-constant-link" href="mqtt-module#mqtt-module-constant" class="level-2">CONSTANT</a></li><li id="mqtt-module-mqtt-client-item" class="level-2"><a id="mqtt-module-mqtt-client-link" href="mqtt-module#mqtt-module-mqtt-client" class="level-2">mqtt.Client()</a></li></ul>
        </div>
      </div>
      <div role="flatdoc-content" class="content">
        <h1 id="mqtt-module">mqtt module</h1>
<h2 id="mqtt-module-constant">CONSTANT</h2>
<h2 id="mqtt-module-mqtt-client">mqtt.Client()</h2>
<h4 id="description">Description</h4>
<p>create a mqtt client.<br></p>
<h4 id="syntax">Syntax</h4>
<p>mqtt.Client(clientid, keepalive, user, pass)</p>
<h4 id="parameters">Parameters</h4>
<p>clientid: the client id.<br>
keepalive: keepalive second, a number.<br>
user: user name, a string.<br>
pass: user password, a string.</p>
<h4 id="returns">Returns</h4>
<p>mqtt client.</p>
<h4 id="example">Example</h4>
<pre><code class="language-lua"><span class="comment">-- init mqtt client with keepalive timer 120sec</span>
m = mqtt.Client(<span class="string">&quot;clientid&quot;</span>, <span class="number">120</span>, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;password&quot;</span>)

<span class="comment">-- setup Last Will and Testament (optional)</span>
<span class="comment">-- Broker will publish a message with:</span>
<span class="comment">-- qos = 0, retain = 0, data = &quot;offline&quot; </span>
<span class="comment">-- to topic &quot;/lwt&quot; if client don&apos;t send keepalive packet</span>
m:lwt(<span class="string">&quot;/lwt&quot;</span>, <span class="string">&quot;offline&quot;</span>, <span class="number">0</span>, <span class="number">0</span>)

m:on(<span class="string">&quot;connect&quot;</span>, <span class="function"><span class="keyword">function</span><span class="params">(con)</span></span> <span class="built_in">print</span> (<span class="string">&quot;connected&quot;</span>) <span class="keyword">end</span>)
m:on(<span class="string">&quot;offline&quot;</span>, <span class="function"><span class="keyword">function</span><span class="params">(con)</span></span> <span class="built_in">print</span> (<span class="string">&quot;offline&quot;</span>) <span class="keyword">end</span>)

<span class="comment">-- on publish message receive event</span>
m:on(<span class="string">&quot;message&quot;</span>, <span class="function"><span class="keyword">function</span><span class="params">(conn, topic, data)</span></span> 
  <span class="built_in">print</span>(topic .. <span class="string">&quot;:&quot;</span> ) 
  <span class="keyword">if</span> data ~= <span class="keyword">nil</span> <span class="keyword">then</span>
    <span class="built_in">print</span>(data)
  <span class="keyword">end</span>
<span class="keyword">end</span>)

<span class="comment">-- for secure: m:connect(&quot;192.168.11.118&quot;, 1880, 1)</span>
m:connect(<span class="string">&quot;192.168.11.118&quot;</span>, <span class="number">1880</span>, <span class="number">0</span>, <span class="function"><span class="keyword">function</span><span class="params">(conn)</span></span> 
    <span class="built_in">print</span>(<span class="string">&quot;connected&quot;</span>) 
<span class="keyword">end</span>)

<span class="comment">-- subscribe topic with qos = 0</span>
m:subscribe(<span class="string">&quot;/topic&quot;</span>,<span class="number">0</span>, <span class="function"><span class="keyword">function</span><span class="params">(conn)</span></span> 
    <span class="built_in">print</span>(<span class="string">&quot;subscribe success&quot;</span>) 
<span class="keyword">end</span>)

<span class="comment">-- publish a message with data = hello, QoS = 0, retain = 0</span>
m:publish(<span class="string">&quot;/topic&quot;</span>,<span class="string">&quot;hello&quot;</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="function"><span class="keyword">function</span><span class="params">(conn)</span></span> 
    <span class="built_in">print</span>(<span class="string">&quot;sent&quot;</span>) 
<span class="keyword">end</span>)

m:close();
<span class="comment">-- you can call m:connect again</span></code></pre>
<h4 id="see-also">See also</h4>
<p><strong>-</strong>   <a href="mqtt-module"></a></p>

      </div>
    </div>
  </div>

  <!-- Custom -->
  <script src="assets/js/docs.js"></script>

</body>
</html>
